from classWbad import WbAd
import telebot
from classSqlite import sqliteCommand
from telebot import types
from sqlAd import useChat
import requests
from telebot.types import ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton
import sqlite3
from datetime import datetime, date, timedelta, datetime
import os
import subprocess



def control(m,req): #–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞–≤–∫–∏ –∏ —Å—Ç–∞–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å
    if len(m.text.split())>=3 and len(m.text.split())<=10: # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–ª-–≤–∞ —Å–ª–æ–≤ –≤ –∑–∞–ø—Ä–æ—Å–µ
         pass
    else:
        bot.send_message(m.chat.id,'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞.\n–ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ @karpov_coach')
        exit()
    
    poz,price,zapros = m.text.split()[0],m.text.split()[1],' '.join(m.text.split()[2:])#–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω–Ω–∏–∫–∞
    firstPrice,secPrice = poz.split('-')[0].isdigit(),poz.split('-')[-1].isdigit()
    if firstPrice and secPrice: #–ø—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω–Ω–∏–∫–∞
          pass
    else:
        bot.send_message(m.chat.id,'–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞.\n–ï—Å–ª–∏ –≤—Å–µ –≤–µ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ @karpov_coach')
        exit()
    numAd = req.split()[1]
    bot.send_message(m.chat.id,useChat().addDataInChats(m.chat.id, numAd, poz, price, zapros))
def getPriceList(m):#–ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–µ–Ω—ã –ø–æ –∑–∞–ø—Ä–æ—Å—É
    try:
        per = sqlite3.connect('chatAndAd.db').execute(
            f'select adid from tg where tgid={m.chat.id};').fetchall()
        rez = [per[i][0] for i in range(len(per))]

        url = f'https://catalog-ads.wildberries.ru/api/v5/search?keyword={m.text}'  # URL —Å–∞–π—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–∫–∞—á–∞—Ç—å
        response = requests.get(url)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if response.status_code == 200:  # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
            content = requests.get(url).json()
            positions_list = []
            id_list = []
            cpm_list = []
            advertId_list = []
            info = ''
            page_cou = 0
            pos_cou = 0
            for i in content['pages']:
                for j in i['positions']:
                    positions_list.append(j)
            for i in content['adverts']:
                id_list.append(i['id'])
                cpm_list.append(i['cpm'])
                advertId_list.append(i['advertId'])

            for pos, id, cpm, ad in zip(positions_list, id_list, cpm_list, advertId_list):
                pos_cou += 1

                if pos_cou % 30 == 1 or len(advertId_list)==pos_cou:
                    page_cou += 1
                    if page_cou == 2:
                        bot.send_message(m.chat.id, info, parse_mode='HTML')
                        continue
                if ad in rez:
                    info += f'<b>{pos_cou}) –ü–æ–∑–∏—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ: {pos}, –ê—Ä—Ç–∏–∫—É–ª: {id}, –¶–µ–Ω–∞ –º–µ—Å—Ç–∞: {cpm}</b>\n'
                else:
                    info += f'{pos_cou}) –ü–æ–∑–∏—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ: {pos}, –ê—Ä—Ç–∏–∫—É–ª: {id}, –¶–µ–Ω–∞ –º–µ—Å—Ç–∞: {cpm}\n'

        markup = InlineKeyboardMarkup(row_width=1)
        markup.add(DMenu['workWithAds'],
                DMenu['checkPrice'],
                DMenu['options'],
                DMenu['buySub'],
                DMenu['help'])
        bot.send_message(m.from_user.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup = markup)
        pass
    except Exception as ex:
        bot.send_message(m.chat.id,
                            '–ü–æ –¥–∞–Ω–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.')
def addApi(m):
    if len(m.text) > 100:
        sql.addPerson(m.chat.id, m.text)
        bot.send_message(m.chat.id, f"–í–∞—à —Ç–æ–∫–µ–Ω –¥–æ–±–∞–≤–ª–µ–Ω.")
    else:
        bot.send_message(m.chat.id, f"–ß—Ç–æ —Ç–æ —Å —Ç–æ–∫–µ–Ω–æ–º –Ω–µ–ª–∞–¥–Ω–æ–µ.")
def changeApi(m):
    if len(m.text) > 100:
        sql.changeApi(m.chat.id, m.text)
        bot.send_message(m.chat.id, f"–í–∞—à —Ç–æ–∫–µ–Ω –∏–∑–º–µ–Ω–µ–Ω.")
    else:
        bot.send_message(m.chat.id, f"–ß—Ç–æ —Ç–æ —Å —Ç–æ–∫–µ–Ω–æ–º –Ω–µ–ª–∞–¥–Ω–æ–µ.")
def chek_podp(m):
            proverkaUser = sqlite3.connect('podpiska.db').execute(
                f'SELECT * FROM data where tg={m.chat.id};').fetchall()
            if datetime.strptime(proverkaUser[0][1], '%Y-%m-%d').date() < date.today():
                bot.send_message(m.chat.id, "–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å, –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è –Ω–∞–ø–∏—à–∏—Ç–µ @karpov_coach")
                return False
            else:
                return True


sql = sqliteCommand()
bot = telebot.TeleBot('6303791556:AAEqfNunwnk8kBRQZo34yFWvjt_SV5g5_1A')

commands = ['/menu']
bot.set_my_commands([types.BotCommand(command, '–í—ã–∑–≤–∞—Ç—å –º–µ–Ω—é') for command in commands])
DMenu = {
                            #–ì–ª–∞–≤–Ω–∞—è
        'workWithAds':InlineKeyboardButton(text='üßë‚Äçüè≠ –†–∞–±–æ—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–æ–π', callback_data='workWithAds'),
        'checkPrice':InlineKeyboardButton(text='üî≠ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–Ω –ø–æ –∑–∞–ø—Ä–æ—Å—É', callback_data='checkPrice'),
        'buySub':InlineKeyboardButton(text='üõí –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data='buySub'),
        'options':InlineKeyboardButton(text='üõ† –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='options'),
        'refProgram':InlineKeyboardButton(text='ü§ù –ü—Ä–∏–≤–µ–¥–∏ –¥—Ä—É–≥–∞', callback_data='refProgram'), 
        'help':InlineKeyboardButton(text='üÜò –ü–æ–º–æ—â—å –∏ –≤–æ–ø—Ä–æ—Å—ã', callback_data='help'),

                            #–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–æ–π
        'myAds':InlineKeyboardButton(text='–ú–æ—è —Ä–µ–∫–ª–∞–º–∞', callback_data='myAds'),
        'controlAds':InlineKeyboardButton(text='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–æ–π', callback_data='controlAds'),
                             
                            #–ù–∞—Å—Ç—Ä–æ–π–∫–∏
        'addApi':InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π API', callback_data='addApi'),
        'changeApi':InlineKeyboardButton(text='–ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∫–ª–∞–º–Ω—ã–π API', callback_data='changeApi'),


                            #–ü–æ–º–æ—â—å –∏ –≤–æ–ø—Ä–æ—Å—ã
        'video':InlineKeyboardButton(text='–í–∏–¥–µ–æ—É—Ä–æ–∫', callback_data='video',url='https://cloud.mail.ru/public/jTLu/wUmvAygka'),
        'howWorkBot':InlineKeyboardButton(text='–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç', callback_data='howWorkBot'),
        'howAddToken':InlineKeyboardButton(text='–ì–¥–µ –≤–∑—è—Ç—å –∏ –∫–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å —Ç–æ–∫–µ–Ω', callback_data='howAddToken',url='https://cloud.mail.ru/public/ycFj/UuKxkWpKn'),
        'helpComl':InlineKeyboardButton(text='–í–æ–ø—Ä–æ—Å/–ñ–∞–ª–æ–±–∞/–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ', callback_data='helpComl'), 




                            #–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        'main':InlineKeyboardButton(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data='main'),}
#–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ call
@bot.callback_query_handler(func=lambda call:True)
def callback_query(call):
    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞ –≤ –±–¥
    if sql.check_id(call.message.chat.id) == False:
        bot.send_message(call.message.chat.id,
                        '–í–∞–º –ù–ï–û–ë–•–û–î–ò–ú–û –¥–æ–±–∞–≤–∏—Ç—å —Å–≤–æ–π –†–ï–ö–õ–ê–ú–ù–´–ô —Ç–æ–∫–µ–Ω –≤ –º–µ–Ω—é "–†–∞–±–æ—Ç–∞ —Å —Ç–æ–∫–µ–Ω–∞–º–∏ (API)".')
    try:
        req = call.data.split('_')
        if req[0] == 'unseen':
            bot.delete_message(call.message.chat.id, call.message.message_id)

        if req[0] == 'workWithAds':
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = InlineKeyboardMarkup(row_width=1)
            markup.add(
                DMenu['myAds'],
                DMenu['controlAds'],
                DMenu['main'],)
            bot.send_message(call.message.chat.id,'–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–æ–π',reply_markup = markup)

        if req[0] == 'main':
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = InlineKeyboardMarkup(row_width=1)
            markup.add(DMenu['workWithAds'],
                DMenu['checkPrice'],
                DMenu['options'],
                DMenu['buySub'],
                DMenu['refProgram'],
                DMenu['help'])
            bot.send_message(call.message.chat.id,'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup = markup)

        if req[0] == 'options':
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = InlineKeyboardMarkup(row_width=1)
            markup.add(DMenu['addApi'],
                DMenu['changeApi'],
                DMenu['main'],)
            bot.send_message(call.message.chat.id,'–ù–∞—Å—Ç—Ä–æ–π–∫–∏',reply_markup = markup)

        if req[0] == 'help':
                bot.delete_message(call.message.chat.id, call.message.message_id)
                markup = InlineKeyboardMarkup(row_width=1)
                markup.add(DMenu['video'],
                    DMenu['howWorkBot'],
                    DMenu['howAddToken'],
                    DMenu['helpComl'],
                    DMenu['main'],)
                bot.send_message(call.message.chat.id,'–ü–æ–º–æ—â—å –∏ –≤–æ–ø—Ä–æ—Å—ã',reply_markup = markup)

        if req[0] == 'howWorkBot':
                bot.send_message(call.message.chat.id,'–ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç?'
                                                        '\n1) –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–º—É –≤—ã—Å—Ç–∞–≤–ª–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É, —á—Ç–æ –±—ã –≤—ã –º–æ–≥–ª–∏ –≥–∞—Ä–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ'
                                                        ' –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ç–æ–ø–µ –∏ –Ω–µ –ø–µ—Ä–µ–ø–ª–∞—á–∏–≤–∞—Ç—å, —Ç–µ–º —Å–∞–º—ã–º —ç–∫–æ–Ω–æ–º–∏–≤ —Å–≤–æ–π –±—é–¥–∂–µ—Ç!'
                                                        '\n2) –ï—Å–ª–∏ –≤–∞—à–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—Ç–∞–≤–∫–∞ –ú–ï–ù–¨–®–ï —á–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–æ–º–µ–∂—É—Ç–∫–∞ –ø–æ–∑–∏—Ü–∏–π, —á—Ç–æ –≤—ã –∑–∞–¥–∞–ª–∏,'
                                                        ' –±–æ—Ç —Å—Ç–∞–≤–∏—Ç —Ü–µ–Ω—É 50—Ä—É–±–ª–µ–π –Ω–∞ 1000 –ø–æ–∫–∞–∑–æ–≤ –∏ –∂–¥–µ—Ç, –∫–æ–≥–¥–∞ —Ü–µ–Ω–∞ –ø–æ–∑–∏—Ü–∏–π, —á—Ç–æ –≤—ã –∑–∞–¥–∞–ª–∏, '
                                                        ' –±—É–¥–µ—Ç —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—Ç—å –≤–∞—à–µ–π –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å—Ç–∞–≤–∫–µ –Ω–∞ 1000 –ø–æ–∫–∞–∑–æ–≤.'
                                                        '\n<b>–ü—Ä–∏–º–µ—á–∞–Ω–∏—è:</b>'
                                                        '\n    1) –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å —Ä–µ–∫–ª–∞–º–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏—è–º–∏ –≤ <b>–ü–û–ò–°–ö–ï</b>'
                                                        '\n    2) –ë–æ—Ç –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Ç–æ–ø–µ –≤–∞–∏–ª–¥–±–µ—Ä–∏–∑ –ø–æ –∑–∞–ø—Ä–æ—Å—É',
                                        parse_mode='HTML')
        if req[0] == 'myAds':
            bot.delete_message(call.message.chat.id, call.message.message_id)
            try:
                            bot.send_message(call.message.chat.id, '<b>----------–ó–∞–≥—Ä—É–∂–∞—é!----------</b>', parse_mode='HTML')
                            wb = WbAd(sql.getApi(call.message.chat.id)).getMyAds()
                            bot.send_message(call.message.chat.id, wb, parse_mode='HTML')
            except:
                            bot.send_message(call.message.chat.id, '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∫–ª–∞–º–Ω—ã–π —Ç–æ–∫–µ–Ω! –ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.\–ó–∞ –ø–æ–º–æ—â—å—é –Ω–∞–ø–∏—à–∏—Ç–µ @karpov_coach')
            finally:
                markup = InlineKeyboardMarkup(row_width=1)
                markup.add(
                    DMenu['myAds'],
                    DMenu['controlAds'],
                    DMenu['main'],)
                bot.send_message(call.message.chat.id,'–†–∞–±–æ—Ç–∞ —Å —Ä–µ–∫–ª–∞–º–æ–π',reply_markup = markup)

        if req[0] == 'controlAds' and chek_podp(call.message):
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = InlineKeyboardMarkup(row_width=1)
            for i in WbAd(sql.getApi(call.message.chat.id)).getLitsNameMyAds():
                                markup.add(InlineKeyboardButton(text = f'{i}',callback_data = f'Ad {i}' ))
            markup.add(DMenu['main'])
            bot.send_message(call.message.chat.id, '–°–ø–∏—Å–æ–∫ –≤–∞—à–µ–π —Ä–µ–∫–ª–∞–º—ã', reply_markup=markup)

        if req[0].split()[0] == 'Ad':
            i,num = ' '.join(req[0].split()[1:]),req[0].split()[-1]
            bot.delete_message(call.message.chat.id, call.message.message_id)
            markup = InlineKeyboardMarkup(row_width=1)
            markup.add(InlineKeyboardButton(text = f'–ó–∞–ø—É—Å—Ç–∏—Ç—å —Ä–µ–∫–ª–∞–º—É',callback_data = f'Start {num}' ))
            markup.add(InlineKeyboardButton(text = f'–û—Ç—Å–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º—É',callback_data = f'Stop {num}' ))
            markup.add(InlineKeyboardButton(text = f'–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –∫–æ–Ω—Ç—Ä–æ–ª—å',callback_data = f'GetConrol {num}' ))
            markup.add(InlineKeyboardButton(text = f'–°–Ω—è—Ç—å —Å –∫–æ–Ω—Ç—Ä–æ–ª—è',callback_data = f'StopControl {num}' ))
            
            markup.add(DMenu['controlAds'],DMenu['main'])
            bot.send_message(call.message.chat.id, f'–ö–∞–∫–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–≤–µ—Ä—à–∏—Ç—å —Å —Ä–µ–∫–ª–∞–º–æ–π <b>{i}</b>', reply_markup=markup,parse_mode='HTML')
        
        if req[0].split()[0] == 'Start':
            WbAd(sql.getApi(call.message.chat.id)).startAd(req[0].split()[1])
            bot.send_message(call.message.chat.id, "–ó–∞–ø—É—â–µ–Ω–∞!")

        if req[0].split()[0] == 'Stop':
            WbAd(sql.getApi(call.message.chat.id)).pauseAd(req[0].split()[1])
            bot.send_message(call.message.chat.id, "–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

        if req[0].split()[0] == 'GetConrol':
            msg = bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å –ø–æ —Ñ–æ—Ä–º–∞—Ç—É –Ω–∏–∂–µ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª!\n\
                            1) –ñ–µ–ª–∞–µ–º–∞—è –ø–æ–∑–∏—Ü–∏—è\n\
                            2) –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –°—Ç–∞–≤–∫–∞ –∑–∞ 1000 –ø–æ–∫–∞–∑–æ–≤\n\
                            3) –ú–∞—Å—Ç–µ—Ä —Ñ—Ä–∞–∑–∞ –ø—Ä –∫–æ—Ç–æ—Ä–æ–π –±—É–¥–µ—Ç –±—Ä–∞—Ç—å—Å—è —Ü–µ–Ω–Ω–∏–∫\n\n<b>–ü–µ—Ä–µ–¥ –≤–∞–º–∏ 3 –ø—Ä–∏–º–µ—Ä–∞:</b>\n(–ë–æ—Ç—É –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ç–æ–ª—å–∫–æ <b>–æ–¥–∏–Ω</b> –∑–∞–ø—Ä–æ—Å –æ–¥–Ω–æ–π —Å—Ç—Ä–æ—á–∫–æ–π)\n   -----\n4 120 –ø–∏–∂–∞–º–∞ –≤ –≥–æ—Ä–æ—à–µ–∫ –ª–µ—Ç–Ω—è—è\n7-14 200 –±—Ä—é–∫–∏ –∫–ª–µ—à\n1-20 325 —Ç–∞–∑–∏–∫',
                            parse_mode='HTML')
            bot.register_next_step_handler(msg, control,req[0])
            
        if req[0].split()[0] == 'StopControl':
            useChat().delAd(req[0].split()[-1].strip())
            bot.send_message(call.message.chat.id, '–†–µ–∫–ª–∞–º–∞ —Å–Ω—è—Ç–∞ —Å –∫–æ–Ω—Ç—Ä–æ–ª—è.')

        if req[0] == 'checkPrice':
            msg = bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å: \n–ü—Ä–∏–º–µ—Ä: <b>–º–∞–π–∫–∞ —Ä–æ–∑–æ–≤–∞—è</b>',
                                        parse_mode='HTML')
            bot.register_next_step_handler(msg, getPriceList)

        if req[0] == 'addApi':
            msg = bot.send_message(call.message.chat.id,'–ü—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à <b>—Ä–µ–∫–ª–∞–º–Ω—ã–π</b> Api', parse_mode='HTML')
            bot.register_next_step_handler(msg,addApi)

        if req[0] == 'changeApi':
            msg = bot.send_message(call.message.chat.id,'–ü—Ä–∏—à–ª–∏—Ç–µ –≤–∞—à <b>–Ω–æ–≤—ã–π —Ä–µ–∫–ª–∞–º–Ω—ã–π</b> Api', parse_mode='HTML')
            bot.register_next_step_handler(msg,changeApi)

        if req[0] == 'buySub':
            markup = InlineKeyboardMarkup()
            markup.add(InlineKeyboardButton(text='–û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞', callback_data='checkCash'))
            bot.send_photo(call.message.chat.id,open('sber.jpeg', 'rb'))
            bot.send_message(call.message.chat.id, f"–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–¥–ø–∏—Å–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 1000—Ä <b>–ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞</b> –∏ 1500—Ä –ë–ï–ó —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞\n–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –Ω–∞ –°–ë–ï–†–ë–ê–ù–ö –ø–µ—Ä–µ–≤–æ–¥–æ–º –ø–æ –Ω–æ–º–µ—Ä—É <b>+79773262093 \
                                (–ö–∞—Ä–ø–æ–≤ –ê.–ê.)</b>\n<b>–í–ù–ò–ú–ê–ù–ò–ï!</b>\n–í –∫–æ–º–º–µ—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–µ–≤–æ–¥—É —É–∫–∞–∂–∏—Ç–µ –¥–∞–Ω–Ω—ã–π –∫–æ–¥  <b>{call.message.chat.id}</b> –∏ —á–µ—Ä–µ–∑ (<b>:</b>) —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥, –µ—Å–ª–∏ –æ–Ω —É –≤–∞—Å –µ—Å—Ç—å.\
                            \n–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <b>{call.message.chat.id}:–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥</b>\
                            \n–ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ <b>–û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û</b> –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É <b>–û–ø–ª–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</b>",parse_mode='HTML', reply_markup = markup)
        if req[0] == 'checkCash':
            markup = InlineKeyboardMarkup()
            markup.add(InlineKeyboardButton(text='–î–∞', callback_data='Yes'))
            markup.add(InlineKeyboardButton(text= '–ù–µ—Ç', callback_data='No'))

            bot.send_message(5645821676, f"–•–æ—Ç—è—Ç –∫—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É {call.message.chat.id}",reply_markup = markup)

            bot.edit_message_text('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –ø—Ä–æ–≤–µ—Ä–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è –≤–∞—à –ø–ª–∞—Ç–µ–∂.\n–ü–æ–¥–¥–µ—Ä–∂–∫–∞ @karpov_coach',chat_id=call.message.chat.id, message_id=call.message.message_id, parse_mode='HTML')
            bot.send_message(call.message.chat.id, f"")
        
        if req[0] == 'Yes':
            id = call.message.text.split(' ')[-1]
            current_podpiska = datetime.strptime(sqlite3.connect('podpiska.db').execute(f'SELECT podp from data where tg = {id}').fetchone()[0],'%Y-%m-%d').date()
            if current_podpiska>= date.today():
                newdata = str(current_podpiska   + timedelta(days=int(31)))
                conn = sqlite3.connect('podpiska.db')
                cour = conn.cursor()
                cour.execute('UPDATE data SET podp = ? where tg = ?', (newdata, id))
                conn.commit()
                conn.close()
                bot.send_message(call.message.chat.id, str(
                    sqlite3.connect('podpiska.db').execute(f'select podp from data where tg = {id}').fetchone()[
                        0]))
                bot.send_message(id,f'–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –¥–æ {newdata}')
                bot.edit_message_text(call.message.text,chat_id=call.message.chat.id, message_id=call.message.message_id)

                
            else:
                newdata = str(date.today() + timedelta(days=int(31)))
                conn = sqlite3.connect('podpiska.db')
                cour = conn.cursor()
                cour.execute('UPDATE data SET podp = ? where tg = ?', (newdata, id))
                conn.commit()
                conn.close()
                bot.send_message(call.message.chat.id, str(
                    sqlite3.connect('podpiska.db').execute(f'select podp from data where tg = {id}').fetchone()[
                        0]))
                bot.send_message(id,f'–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –¥–æ {newdata}')
                bot.edit_message_text(call.message.text,chat_id=call.message.chat.id, message_id=call.message.message_id)

        if req[0] == 'No':
            id = call.message.text.split(' ')[-1]
            bot.send_message(id,'–û–ø–ª–∞—Ç–∞ –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–∞ –∫–∞—Ä—Ç—É!\n–ï—Å–ª–∏ –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å @karpov_coach')
            bot.edit_message_text(call.message.text,chat_id=call.message.chat.id, message_id=call.message.message_id)

        if req[0] == 'helpComl':
            bot.send_message(call.message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ @karpov_coach')
        
        if req[0] == 'refProgram':
            bot.send_message(call.message.chat.id,f'–°–∫–∞–∂–∏ –¥—Ä—É–≥—É —Å–≤–æ–π –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ–¥ <b>{call.message.chat.id}</b>.\n–ü–æ–¥–∞—Ä–∏—Ç–µ –¥—Ä—É–≥—É –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é —Å–∫–∏–¥–∫—É –Ω–∞ 500—Ä.\n–¢–∞–∫ –∂–µ –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å –∫—ç—à–±–µ–∫ –Ω–∞ –∫–∞—Ä—Ç—É –≤ —Ä–∞–∑–º–µ—Ä–µ 20% –æ—Ç —Å—É–º–º—ã –∫–æ—Ç–æ—Ä—É—é –ø–æ—Ç—Ä–∞—Ç–∏–ª —Ç–æ–≤–∞—Ä–∏—â –Ω–∞ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏.', parse_mode='HTML')
    except:
        markup = InlineKeyboardMarkup(row_width=1)
        markup.add(DMenu['workWithAds'],
            DMenu['checkPrice'],
            DMenu['options'],
            DMenu['buySub'],
            DMenu['refProgram'],
            DMenu['help'])
        bot.send_message(call.message.chat.id,'–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',reply_markup = markup)




@bot.message_handler()
def mainFun(m):
    if m.chat.id == 5645821676:
        if m.text.split()[0] == 'Send':
            mes = ' '.join(m.text.split()[1:])
            for i in sqlite3.connect('podpiska.db').execute('SELECT tg FROM data').fetchall():
                try:
                    bot.send_message(int(i[0]), mes)
                except:
                    continue        
        if m.text == '  ':
            for i in sqlite3.connect('podpiska.db').execute('SELECT tg FROM data').fetchall():
                try:
                    podp_data = sqlite3.connect('podpiska.db').execute(
                        f'SELECT podp FROM data where tg ={int(i[0])};').fetchall()[0][0]
                    bot.send_message(int(i[0]), f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ {podp_data}")
                except:
                    continue
        if m.text == 'Reboot':
            os.system("reboot now")

    if m.text.split(' ')[0] == 'Add':
        none, id, days = m.text.split(' ')
        newdata = str(date.today() + timedelta(days=int(days)))

        conn = sqlite3.connect('podpiska.db')
        cour = conn.cursor()
        cour.execute('UPDATE data SET podp = ? where tg = ?', (newdata, id))
        conn.commit()
        conn.close()
        bot.send_message(m.chat.id, str(
            sqlite3.connect('podpiska.db').execute(f'select podp from data where tg = {id}').fetchone()[
                0]))
        
    if m.text == 'Reload':
        subprocess.call("../reload.sh")

    #–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    proverkaUser = sqlite3.connect('podpiska.db').execute(
                f'SELECT * FROM data where tg={m.chat.id};').fetchall()
    if not proverkaUser:
                newdata = date.today() + timedelta(days=10)
                sqlite3.connect('podpiska.db').execute(
                    f'INSERT INTO data VALUES (?,?,?,?);', (m.chat.id, newdata, 1, None)).connection.commit()
                sqlite3.connect('podpiska.db').execute('UPDATE data SET podp=?, trial=1 where tg=?', (
                    date.today() + timedelta(days=10), m.chat.id)).connection.commit()
                bot.send_message(m.chat.id, f'–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ {date.today() + timedelta(days=10)}')

    #–æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    markup = InlineKeyboardMarkup(row_width=1)
    markup.add(DMenu['workWithAds'],
            DMenu['checkPrice'],
            DMenu['options'],
            DMenu['buySub'],
            DMenu['refProgram'],
            DMenu['help'])
    bot.send_message(m.from_user.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup = markup)


if __name__ == '__main__':
    bot.polling(none_stop=True)
    